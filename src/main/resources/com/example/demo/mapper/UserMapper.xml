<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.UserMapper">

	<insert id="create" parameterType="com.example.demo.controller.dto.SocialMediaDto">
		INSERT INTO user (
			social_media,
			social_media_id,
			name,
			email
		) VALUES (
			#{socialMedia, jdbcType=VARCHAR},
			#{socialMediaId, jdbcType=VARCHAR},
			#{name, jdbcType=VARCHAR},
			#{email, jdbcType=VARCHAR}
		)
	</insert>

	<select id="searchBySocialMediaInfo" resultType="com.example.demo.entity.UserEntity" parameterType="com.example.demo.controller.dto.SocialMediaDto">
		SELECT
			id,
			player_tag,
			social_media,
			social_media_id,
			name,
			email,
			created_at,
			updated_at
		FROM
			user
		WHERE
			social_media = #{socialMedia, jdbcType=VARCHAR}
			AND social_media_id = #{socialMediaId, jdbcType=VARCHAR}
	</select>

	<select id="searchByUserId" resultType="com.example.demo.entity.UserEntity" parameterType="int">
		SELECT
			id,
			player_tag,
			social_media,
			social_media_id,
			name,
			email,
			created_at,
			updated_at
		FROM
			user
		WHERE
			id = #{userId, jdbcType=INTEGER}
	</select>

	<update id="updatePlayerTag" parameterType="com.example.demo.entity.UserEntity">
		UPDATE
			user
		SET
			player_tag = #{playerTag, jdbcType=VARCHAR}
		WHERE
			id = #{id, jdbcType=INTEGER}
	</update>

	<update id="updateSocialMediaInfo" parameterType="com.example.demo.controller.dto.SocialMediaDto">
		UPDATE
			user
		SET
			name = #{name, jdbcType=VARCHAR},
			email = #{email, jdbcType=VARCHAR}
		WHERE
			social_media = #{socialMedia, jdbcType=VARCHAR}
			AND social_media_id = #{socialMediaId, jdbcType=VARCHAR}
	</update>

	<delete id="delete" parameterType="int">
		DELETE FROM
			user
		WHERE
			id = #{id, jdbcType=INTEGER}
	</delete>
</mapper>

